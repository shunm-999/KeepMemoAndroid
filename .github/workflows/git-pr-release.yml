name: git-pr-release

on:
  push:
    branches:
      - release
      - release/**
      - hotfix/**

jobs:
  create-release-pr:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      # 実行中のジョブをキャンセル
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      # リポジトリのチェックアウト
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Rubyセットアップ
      - name: Set up Ruby 2.6
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6.x
      # ブランチ名の取得
      - name: get branch name
        id: vars
        run: echo "::set-output name=branch_name::${GITHUB_REF#refs/heads/}"
      # Releaseブランチがプッシュされた場合、Mainブランチに向けたプルリクエストを作成
      - name: Create a release pull request for release branch
        if: contains(steps.vars.outputs.branch_name, 'release')
        env:
          GIT_PR_RELEASE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_PR_RELEASE_BRANCH_PRODUCTION: main
          GIT_PR_RELEASE_BRANCH_STAGING: ${{ steps.vars.outputs.branch_name }}
          GIT_PR_RELEASE_LABELS: release
          GIT_PR_RELEASE_TEMPLATE: .github/.git-pr-release-template
        run: |
          gem install -N git-pr-release -v "1.9.0"
          git-pr-release --no-fetch
      # Hotfixブランチがプッシュされた場合、Mainブランチに向けたプルリクエストを作成
      - name: Create a release pull request for hotfix branch
        if: contains(steps.vars.outputs.branch_name, 'hotfix')
        env:
          GIT_PR_RELEASE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_PR_RELEASE_BRANCH_PRODUCTION: main
          GIT_PR_RELEASE_BRANCH_STAGING: ${{ steps.vars.outputs.branch_name }}
          GIT_PR_RELEASE_LABELS: hotfix
          GIT_PR_RELEASE_TEMPLATE: .github/.git-pr-hotfix-template
        run: |
          gem install -N git-pr-release -v "1.9.0"
          git-pr-release --no-fetch
      # Release, Hotfixそれぞれから、Developブランチに向けたプルリクエストをドラフト状態で作成
      # 差分がなくてもエラーなしで終了する
      - name: Create a develop pull request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: ${{ steps.vars.outputs.branch_name }}
          destination_branch: develop
          pr_title: ${{ steps.vars.outputs.branch_name }} into develop
          pr_body: release branch into develop
          pr_label: release
          pr_allow_empty: true
          pr_draft: true
          github_token: ${{ secrets.GITHUB_TOKEN }}